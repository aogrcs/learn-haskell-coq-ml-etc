generated by: HCPN NetEdit v0.1
file format version: 28072004
-- places
NetObject {nId = 69, object = Node {nName = "s2", nPos = Point {pointX = 440, pointY = 137}, nType = Place {pType = "StackM", pInit = ""}}}
NetObject {nId = 70, object = Node {nName = "s1", nPos = Point {pointX = 251, pointY = 137}, nType = Place {pType = "StackM", pInit = ""}}}
NetObject {nId = 71, object = Node {nName = "s0", nPos = Point {pointX = 25, pointY = 137}, nType = Place {pType = "StackM", pInit = "empty_state"}}}
-- transitions
NetObject {nId = 72, object = Node {nName = "t12", nPos = Point {pointX = 358, pointY = 137}, nType = Trans {tGuard = "null $ stack s", tVert = True}}}
NetObject {nId = 73, object = Node {nName = "t11_close", nPos = Point {pointX = 253, pointY = 235}, nType = Trans {tGuard = "not (null (stack s)) && top s == '('", tVert = True}}}
NetObject {nId = 74, object = Node {nName = "t11_open", nPos = Point {pointX = 251, pointY = 39}, nType = Trans {tGuard = "not $ null $ stack s", tVert = True}}}
NetObject {nId = 75, object = Node {nName = "t01_open", nPos = Point {pointX = 98, pointY = 137}, nType = Trans {tGuard = "True", tVert = True}}}
-- arcs
NetObject {nId = 76, object = TP 72 69 "s" []}
NetObject {nId = 77, object = PT 70 73 "s" [Point {pointX = 221, pointY = 154},Point {pointX = 221, pointY = 235}]}
NetObject {nId = 78, object = PT 70 72 "s" []}
NetObject {nId = 79, object = TP 73 70 "out ')' $ pop s" [Point {pointX = 323, pointY = 235},Point {pointX = 323, pointY = 153}]}
NetObject {nId = 80, object = TP 74 70 "out '(' $ push '(' s" [Point {pointX = 339, pointY = 39},Point {pointX = 339, pointY = 120}]}
NetObject {nId = 81, object = PT 70 74 "s" [Point {pointX = 218, pointY = 120},Point {pointX = 218, pointY = 39}]}
NetObject {nId = 82, object = TP 75 70 "out '(' $ push '(' s" []}
NetObject {nId = 83, object = PT 71 75 "s" []}
-- decls
data StackM = StackM{output::String,stack::String}
  deriving Show

empty_state = StackM{output="",stack=[]}

out c (m@StackM{output=o}) = m{output=o++[c]}

push c (m@StackM{stack=s}) = m{stack=c:s}
pop (m@StackM{stack=_:s}) = m{stack=s}
top (m@StackM{stack=h:_}) = h
