generated by: HCPN NetEdit v0.1
file format version: 28072004
-- places
NetObject {nId = 151, object = Node {nName = "resources", nPos = Point {pointX = 296, pointY = 183}, nType = Place {pType = "[ResourceCount]", pInit = "[(A,(0,0)),(B,(0,0)),(C,(0,0))]"}}}
NetObject {nId = 152, object = Node {nName = "non_critical", nPos = Point {pointX = 628, pointY = 201}, nType = Place {pType = "Process", pInit = "(1,[A]),(2,[B]),(3,[A,B])"}}}
NetObject {nId = 153, object = Node {nName = "critical", nPos = Point {pointX = 529, pointY = 223}, nType = Place {pType = "Process", pInit = ""}}}
NetObject {nId = 154, object = Node {nName = "locker_ready", nPos = Point {pointX = 65, pointY = 182}, nType = Place {pType = "()", pInit = "()"}}}
NetObject {nId = 155, object = Node {nName = "locker_active", nPos = Point {pointX = 155, pointY = 248}, nType = Place {pType = "[ResourceCount]", pInit = ""}}}
NetObject {nId = 156, object = Node {nName = "locker_waiting", nPos = Point {pointX = 155, pointY = 136}, nType = Place {pType = "()", pInit = ""}}}
-- transitions
NetObject {nId = 157, object = Node {nName = "leave_critical", nPos = Point {pointX = 529, pointY = 315}, nType = Trans {tGuard = "True", tVert = False}}}
NetObject {nId = 158, object = Node {nName = "enter_critical", nPos = Point {pointX = 529, pointY = 115}, nType = Trans {tGuard = "available crs rs", tVert = False}}}
NetObject {nId = 159, object = Node {nName = "locker_release", nPos = Point {pointX = 155, pointY = 296}, nType = Trans {tGuard = "True", tVert = False}}}
NetObject {nId = 160, object = Node {nName = "locker_lock", nPos = Point {pointX = 155, pointY = 183}, nType = Trans {tGuard = "free_exclusive rs", tVert = False}}}
NetObject {nId = 161, object = Node {nName = "locker_init", nPos = Point {pointX = 155, pointY = 82}, nType = Trans {tGuard = "True", tVert = False}}}
-- arcs
NetObject {nId = 162, object = PT 151 157 "rs" [Point {pointX = 336, pointY = 294},Point {pointX = 491, pointY = 294}]}
NetObject {nId = 163, object = PT 151 158 "rs" [Point {pointX = 316, pointY = 83},Point {pointX = 489, pointY = 83}]}
NetObject {nId = 164, object = TP 157 152 "(id,crs)" [Point {pointX = 547, pointY = 402},Point {pointX = 628, pointY = 402}]}
NetObject {nId = 165, object = PT 152 158 "(id,crs)" [Point {pointX = 628, pointY = 71},Point {pointX = 593, pointY = 71}]}
NetObject {nId = 166, object = TP 158 151 "claim_shared crs rs" [Point {pointX = 500, pointY = 139},Point {pointX = 331, pointY = 139}]}
NetObject {nId = 167, object = TP 161 151 "request_exclusive rs" [Point {pointX = 179, pointY = 94},Point {pointX = 241, pointY = 94}]}
NetObject {nId = 168, object = TP 159 151 "release_exclusive rs" [Point {pointX = 242, pointY = 296}]}
NetObject {nId = 169, object = PT 151 160 "rs" []}
NetObject {nId = 170, object = PT 151 161 "rs" [Point {pointX = 267, pointY = 45},Point {pointX = 194, pointY = 45}]}
NetObject {nId = 171, object = TP 157 151 "release_shared crs rs" [Point {pointX = 508, pointY = 343},Point {pointX = 318, pointY = 343}]}
NetObject {nId = 172, object = PT 153 157 "(id,crs)" []}
NetObject {nId = 173, object = TP 158 153 "(id,crs)" []}
NetObject {nId = 174, object = PT 154 161 "()" [Point {pointX = 65, pointY = 44},Point {pointX = 127, pointY = 44}]}
NetObject {nId = 175, object = TP 159 154 "()" [Point {pointX = 127, pointY = 323},Point {pointX = 65, pointY = 323}]}
NetObject {nId = 176, object = PT 155 159 "rs" []}
NetObject {nId = 177, object = TP 160 155 "rs" []}
NetObject {nId = 178, object = PT 156 160 "()" []}
NetObject {nId = 179, object = TP 161 156 "()" []}
-- decls
import List((\\))

data Resource = A | B | C deriving (Eq,Show)
type PID = Int
type Process = (PID,[Resource])
type Exclusive = Int
type Shared = Int
type ResourceCount = (Resource,(Exclusive,Shared))

available crs rs = null (crs \\ map fst rs) && all (==0) [ excl | (r,(excl,sh)) <- rs ]
claim_shared crs rs = [ if r `elem` crs then (r,(e,s+1)) else (r,(e,s)) | (r,(e,s)) <- rs ]
release_shared crs rs = [ if r `elem` crs then (r,(e,s-1)) else (r,(e,s)) | (r,(e,s)) <- rs ]

request_exclusive rs = [ (r,(1,s)) | (r,(e,s)) <- rs ]
free_exclusive rs = all (==0) [ s | (r,(e,s)) <- rs ]
release_exclusive rs = [ (r,(0,0)) | (r,_) <- rs ]
